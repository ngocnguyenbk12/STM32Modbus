// 4.18.1 0x2f78119e
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_4005831[]; // BITMAP_4005831_ID = 0, Size: 512x512 pixels
extern const unsigned char image_6393411[]; // BITMAP_6393411_ID = 1, Size: 512x512 pixels
extern const unsigned char image_728093[]; // BITMAP_728093_ID = 2, Size: 512x512 pixels
extern const unsigned char image_777610[]; // BITMAP_777610_ID = 3, Size: 512x512 pixels
extern const unsigned char image_blue_buttons_round_edge_icon_button[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 4, Size: 60x60 pixels
extern const unsigned char image_blue_buttons_round_edge_icon_button_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID = 5, Size: 60x60 pixels
extern const unsigned char image_blue_buttons_round_edge_small[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID = 6, Size: 170x60 pixels
extern const unsigned char image_blue_buttons_round_edge_small_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 7, Size: 170x60 pixels
extern const unsigned char image_blue_clocks_backgrounds_clock_standard_background[]; // BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID = 8, Size: 233x243 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_hour_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID = 9, Size: 15x61 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_minute_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID = 10, Size: 15x77 pixels
extern const unsigned char image_blue_clocks_hands_clock_standard_second_hand[]; // BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID = 11, Size: 7x86 pixels
extern const unsigned char image_blue_textures_binding_light[]; // BITMAP_BLUE_TEXTURES_BINDING_LIGHT_ID = 12, Size: 180x180 pixels
extern const unsigned char image_blue_textures_whitewall[]; // BITMAP_BLUE_TEXTURES_WHITEWALL_ID = 13, Size: 400x400 pixels
extern const unsigned char image_blue_togglebars_toggle_round_large_button_off[]; // BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID = 14, Size: 128x38 pixels
extern const unsigned char image_blue_togglebars_toggle_round_large_button_on[]; // BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID = 15, Size: 128x38 pixels
extern const unsigned char image_hum2[]; // BITMAP_HUM2_ID = 16, Size: 512x512 pixels
extern const unsigned char image_images[]; // BITMAP_IMAGES_ID = 17, Size: 217x232 pixels
extern const unsigned char image_light[]; // BITMAP_LIGHT_ID = 18, Size: 225x225 pixels
extern const unsigned char image_temp2[]; // BITMAP_TEMP2_ID = 19, Size: 225x225 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_4005831, 0, 512, 512, 139, 243, 188, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 232, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_6393411, 0, 512, 512, 151, 148, 210, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 297, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_728093, 0, 512, 512, 125, 168, 262, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 292, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_777610, 0, 512, 512, 129, 162, 254, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 302, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_backgrounds_clock_standard_background, 0, 233, 243, 43, 42, 147, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 149, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_hour_hand, 0, 15, 61, 3, 6, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 43, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_minute_hand, 0, 15, 77, 3, 6, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 59, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_clocks_hands_clock_standard_second_hand, 0, 7, 86, 2, 2, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 81, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_textures_binding_light, 0, 180, 180, 0, 0, 180, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 180, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_blue_textures_whitewall, 0, 400, 400, 0, 0, 400, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 400, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_blue_togglebars_toggle_round_large_button_off, 0, 128, 38, 13, 1, 102, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_togglebars_toggle_round_large_button_on, 0, 128, 38, 13, 1, 102, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hum2, 0, 512, 512, 139, 243, 188, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 232, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_images, 0, 217, 232, 0, 0, 217, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 232, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_light, 0, 225, 225, 0, 0, 225, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 225, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_temp2, 0, 225, 225, 0, 0, 225, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 225, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
