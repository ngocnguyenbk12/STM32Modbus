/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef AC_VIEWVIEWBASE_HPP
#define AC_VIEWVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/ac_view_screen/AC_VIEWPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class AC_VIEWViewBase : public touchgfx::View<AC_VIEWPresenter>
{
public:
    AC_VIEWViewBase();
    virtual ~AC_VIEWViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void AC_TempDown()
    {
        // Override and implement this function in AC_VIEW
    }

    virtual void AC_TempUp()
    {
        // Override and implement this function in AC_VIEW
    }

    virtual void AC_TempHigh()
    {
        // Override and implement this function in AC_VIEW
    }

    virtual void AC_TempLow()
    {
        // Override and implement this function in AC_VIEW
    }

    virtual void AC_TempMed()
    {
        // Override and implement this function in AC_VIEW
    }

    virtual void AC_setonoff()
    {
        // Override and implement this function in AC_VIEW
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    touchgfx::ToggleButton SWITCH;
    touchgfx::ButtonWithLabel HIGH;
    touchgfx::ButtonWithLabel MED;
    touchgfx::ButtonWithLabel LOW;
    touchgfx::ButtonWithLabel UP;
    touchgfx::ButtonWithLabel DOWN;
    touchgfx::ButtonWithLabel BACK;
    touchgfx::TextAreaWithOneWildcard TEMPERATURE;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPERATURE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TEMPERATUREBuffer[TEMPERATURE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AC_VIEWViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // AC_VIEWVIEWBASE_HPP
