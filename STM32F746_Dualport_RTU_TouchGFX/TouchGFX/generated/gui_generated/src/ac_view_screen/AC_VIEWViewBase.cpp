/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/ac_view_screen/AC_VIEWViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

AC_VIEWViewBase::AC_VIEWViewBase() :
    buttonCallback(this, &AC_VIEWViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_WHITEWALL_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    SWITCH.setXY(22, 17);
    SWITCH.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    SWITCH.setAction(buttonCallback);

    HIGH.setXY(1, 92);
    HIGH.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    HIGH.setLabelText(touchgfx::TypedText(T___SINGLEUSE_PANZ));
    HIGH.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HIGH.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HIGH.setAction(buttonCallback);

    MED.setXY(1, 152);
    MED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    MED.setLabelText(touchgfx::TypedText(T___SINGLEUSE_79C5));
    MED.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    MED.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    MED.setAction(buttonCallback);

    LOW.setXY(1, 212);
    LOW.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    LOW.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0IZ2));
    LOW.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LOW.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LOW.setAction(buttonCallback);

    UP.setXY(310, 92);
    UP.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    UP.setLabelText(touchgfx::TypedText(T___SINGLEUSE_J95C));
    UP.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    UP.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    UP.setAction(buttonCallback);

    DOWN.setXY(310, 152);
    DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    DOWN.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ERNJ));
    DOWN.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DOWN.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DOWN.setAction(buttonCallback);

    BACK.setXY(310, 212);
    BACK.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    BACK.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OAE4));
    BACK.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BACK.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BACK.setAction(buttonCallback);

    TEMPERATURE.setPosition(202, 17, 239, 53);
    TEMPERATURE.setColor(touchgfx::Color::getColorFromRGB(219, 59, 59));
    TEMPERATURE.setLinespacing(0);
    Unicode::snprintf(TEMPERATUREBuffer, TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TPZ4).getText());
    TEMPERATURE.setWildcard(TEMPERATUREBuffer);
    TEMPERATURE.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HKY5));

    add(__background);
    add(tiledImage1);
    add(SWITCH);
    add(HIGH);
    add(MED);
    add(LOW);
    add(UP);
    add(DOWN);
    add(BACK);
    add(TEMPERATURE);
}

void AC_VIEWViewBase::setupScreen()
{

}

void AC_VIEWViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SWITCH)
    {
        //ONOFF
        //When SWITCH clicked call virtual function
        //Call AC_setonoff
        AC_setonoff();
    }
    else if (&src == &HIGH)
    {
        //AC_HIGH
        //When HIGH clicked call virtual function
        //Call AC_TempHigh
        AC_TempHigh();
    }
    else if (&src == &MED)
    {
        //AC_MED
        //When MED clicked call virtual function
        //Call AC_TempMed
        AC_TempMed();
    }
    else if (&src == &LOW)
    {
        //AC_LOW
        //When LOW clicked call virtual function
        //Call AC_TempLow
        AC_TempLow();
    }
    else if (&src == &UP)
    {
        //AC_UP
        //When UP clicked call virtual function
        //Call AC_TempUp
        AC_TempUp();
    }
    else if (&src == &DOWN)
    {
        //AC_DOWN
        //When DOWN clicked call virtual function
        //Call AC_TempDown
        AC_TempDown();
    }
    else if (&src == &BACK)
    {
        //AC_2_MAIN
        //When BACK clicked change screen to MAIN_MENU
        //Go to MAIN_MENU with no screen transition
        application().gotoMAIN_MENUScreenNoTransition();
    }
}
