/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/time_setting_screen/TIME_SETTINGViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

TIME_SETTINGViewBase::TIME_SETTINGViewBase() :
    buttonCallback(this, &TIME_SETTINGViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_WHITEWALL_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    analogClock1.setXY(7, 15);
    analogClock1.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID, 116, 116);
    analogClock1.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID, 3, 66);
    analogClock1.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID, 7, 67);
    analogClock1.setMinuteHandSecondCorrection(false);
    analogClock1.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID, 7, 52);
    analogClock1.setHourHandMinuteCorrection(false);
    analogClock1.initializeTime24Hour(10, 10, 0);

    UP_1.setXY(254, 38);
    UP_1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    UP_1.setAction(buttonCallback);

    UP_2.setXY(314, 38);
    UP_2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    UP_2.setAction(buttonCallback);

    DOWN_1.setXY(254, 98);
    DOWN_1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    DOWN_1.setAction(buttonCallback);

    DOWN_2.setXY(314, 98);
    DOWN_2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    DOWN_2.setAction(buttonCallback);

    BACK.setXY(310, 212);
    BACK.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    BACK.setLabelText(touchgfx::TypedText(T___SINGLEUSE_3WOS));
    BACK.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BACK.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BACK.setAction(buttonCallback);

    UP_3.setXY(374, 38);
    UP_3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    UP_3.setAction(buttonCallback);

    DOWN_3.setXY(374, 98);
    DOWN_3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    DOWN_3.setAction(buttonCallback);

    textArea1.setXY(267, 56);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DX8V));

    textArea1_1.setXY(267, 116);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Y8V));

    textArea1_2.setXY(327, 56);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U1O3));

    textArea1_2_1.setXY(327, 56);
    textArea1_2_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_2_1.setLinespacing(0);
    textArea1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HSDP));

    textArea1_2_2.setXY(327, 116);
    textArea1_2_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_2_2.setLinespacing(0);
    textArea1_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_842C));

    textArea1_2_1_1.setXY(387, 56);
    textArea1_2_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_2_1_1.setLinespacing(0);
    textArea1_2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_13O0));

    textArea1_2_1_1_1.setXY(387, 116);
    textArea1_2_1_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_2_1_1_1.setLinespacing(0);
    textArea1_2_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5UL4));

    add(__background);
    add(tiledImage1);
    add(analogClock1);
    add(UP_1);
    add(UP_2);
    add(DOWN_1);
    add(DOWN_2);
    add(BACK);
    add(UP_3);
    add(DOWN_3);
    add(textArea1);
    add(textArea1_1);
    add(textArea1_2);
    add(textArea1_2_1);
    add(textArea1_2_2);
    add(textArea1_2_1_1);
    add(textArea1_2_1_1_1);
}

void TIME_SETTINGViewBase::setupScreen()
{

}

void TIME_SETTINGViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &UP_1)
    {
        //TIME_UP1
        //When UP_1 clicked call virtual function
        //Call Time_Up1
        Time_Up1();
    }
    else if (&src == &UP_2)
    {
        //TIME_UP2
        //When UP_2 clicked call virtual function
        //Call Time_Up2
        Time_Up2();
    }
    else if (&src == &DOWN_1)
    {
        //TIME_DOWN1
        //When DOWN_1 clicked call virtual function
        //Call Time_Down1
        Time_Down1();
    }
    else if (&src == &DOWN_2)
    {
        //TIME_DOWN2
        //When DOWN_2 clicked call virtual function
        //Call Time_Down2
        Time_Down2();
    }
    else if (&src == &BACK)
    {
        //TIME2MAIN
        //When BACK clicked change screen to MAIN_MENU
        //Go to MAIN_MENU with no screen transition
        application().gotoMAIN_MENUScreenNoTransition();
    }
    else if (&src == &UP_3)
    {
        //TIME_UP3
        //When UP_3 clicked call virtual function
        //Call Time_Up3
        Time_Up3();
    }
    else if (&src == &DOWN_3)
    {
        //TIME_DOWN3
        //When DOWN_3 clicked call virtual function
        //Call Time_Down3
        Time_Down3();
    }
}
