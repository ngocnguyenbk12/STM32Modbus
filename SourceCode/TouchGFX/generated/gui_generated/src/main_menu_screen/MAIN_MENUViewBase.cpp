/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_menu_screen/MAIN_MENUViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MAIN_MENUViewBase::MAIN_MENUViewBase() :
    buttonCallback(this, &MAIN_MENUViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_WHITEWALL_ID));
    tiledImage1.setPosition(0, 0, 486, 272);
    tiledImage1.setOffset(0, 0);

    analogClock1.setXY(18, 15);
    analogClock1.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID, 116, 116);
    analogClock1.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID, 3, 66);
    analogClock1.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID, 7, 67);
    analogClock1.setMinuteHandSecondCorrection(false);
    analogClock1.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID, 7, 52);
    analogClock1.setHourHandMinuteCorrection(false);
    analogClock1.initializeTime24Hour(10, 10, 0);

    SETTING.setXY(282, 196);
    SETTING.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    SETTING.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RDTD));
    SETTING.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SETTING.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SETTING.setAction(buttonCallback);

    LIGHT_BUTTON.setXY(282, 76);
    LIGHT_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    LIGHT_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_LSOD));
    LIGHT_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LIGHT_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    LIGHT_BUTTON.setAction(buttonCallback);

    SERVICE_BUTTON.setXY(282, 136);
    SERVICE_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    SERVICE_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_UW39));
    SERVICE_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SERVICE_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SERVICE_BUTTON.setAction(buttonCallback);

    AC_BUTTON.setXY(282, 15);
    AC_BUTTON.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    AC_BUTTON.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XA5L));
    AC_BUTTON.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AC_BUTTON.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    AC_BUTTON.setAction(buttonCallback);

    add(__background);
    add(tiledImage1);
    add(analogClock1);
    add(SETTING);
    add(LIGHT_BUTTON);
    add(SERVICE_BUTTON);
    add(AC_BUTTON);
}

void MAIN_MENUViewBase::setupScreen()
{

}

void MAIN_MENUViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SETTING)
    {
        //MAIN_2_SETTING
        //When SETTING clicked change screen to TIME_SETTING
        //Go to TIME_SETTING with no screen transition
        application().gotoTIME_SETTINGScreenNoTransition();
    }
    else if (&src == &LIGHT_BUTTON)
    {
        //MAIN_2_LIGHT
        //When LIGHT_BUTTON clicked change screen to LIGHT_VIEW
        //Go to LIGHT_VIEW with no screen transition
        application().gotoLIGHT_VIEWScreenNoTransition();
    }
    else if (&src == &SERVICE_BUTTON)
    {
        //MAIN_2_SERVICE
        //When SERVICE_BUTTON clicked change screen to SERVICE_VIEW
        //Go to SERVICE_VIEW with no screen transition
        application().gotoSERVICE_VIEWScreenNoTransition();
    }
    else if (&src == &AC_BUTTON)
    {
        //MAIN_2_AC
        //When AC_BUTTON clicked change screen to AC_VIEW
        //Go to AC_VIEW with no screen transition
        application().gotoAC_VIEWScreenNoTransition();
    }
}
