/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LIGHT_VIEWVIEWBASE_HPP
#define LIGHT_VIEWVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/light_view_screen/LIGHT_VIEWPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class LIGHT_VIEWViewBase : public touchgfx::View<LIGHT_VIEWPresenter>
{
public:
    LIGHT_VIEWViewBase();
    virtual ~LIGHT_VIEWViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Light_Button3()
    {
        // Override and implement this function in LIGHT_VIEW
    }

    virtual void Light_Button2()
    {
        // Override and implement this function in LIGHT_VIEW
    }

    virtual void Light_Button1()
    {
        // Override and implement this function in LIGHT_VIEW
    }

    virtual void Light_Button0()
    {
        // Override and implement this function in LIGHT_VIEW
    }

    virtual void Light_Button4()
    {
        // Override and implement this function in LIGHT_VIEW
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    touchgfx::ButtonWithLabel BACK;
    touchgfx::ToggleButton LIGHT0_BUTTON;
    touchgfx::ToggleButton LIGHT1_BUTTON;
    touchgfx::ToggleButton LIGHT2_BUTTON;
    touchgfx::ToggleButton LIGHT3_BUTTON;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea1_2;
    touchgfx::TextArea textArea1_3;
    touchgfx::ToggleButton LIGHT4_BUTTON;
    touchgfx::TextArea textArea1_1_1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LIGHT_VIEWViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // LIGHT_VIEWVIEWBASE_HPP
